@using EntityLayer.Concrete
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Web.Common;
@model IPagedList<EntityLayer.Concrete.CalculationText>

@{
    ViewData["Title"] = "WriterCalculationTextList";
    Layout = "~/Views/Shared/_WriterLayout.cshtml";
}

<h1>Yazarın blogları</h1>
<table class="table table-bordered">
    <tr>
        <th>#</th>
        <th>Hesaplama Aracı Başlığı</th>

    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>@item.CalculationTextID</td>
            <td>@item.CalculationTitle</td>
            <td><a href="/hesaplamaaraclari/icerikdüzenle/@item.CalculationTextID" class="btn btn-warning">Düzenle</a></td>
        </tr>
    }

</table>
<ul class="pagination justify-content-start">
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions
    {
    LiElementClasses = new List<string>
    {
    "page-link","pagedlist"
    }
    })
</ul>

<td><a asp-action="CalculationToolsAddText" asp-controller="CalculationTools" class="btn btn-primary">Yeni Hesaplama Aracı İçeriği Oluştur</a></td>


